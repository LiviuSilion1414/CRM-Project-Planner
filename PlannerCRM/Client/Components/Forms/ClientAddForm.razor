<RadzenStack>
    <RadzenCard>
        <EditForm EditContext="@_context" OnSubmit="@OnValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-control">
                <label>Name</label>
                <InputText class="form-control" @bind-Value="@_model.Name" />
                <ValidationMessage For="@(() => _model.Name)" />
            </div>
            <div class="form-control">
                <label>Vat Number</label>
                <InputText class="form-control" @bind-Value="@_model.VatNumber" />
                <ValidationMessage For="@(() => _model.VatNumber)" />
            </div>
        </EditForm>
    </RadzenCard>
    <RadzenStack AlignItems="AlignItems.End" Orientation="Orientation.Horizontal">
        <button class="btn btn-outline-info" type="button" @onclick="(() => dialog.Close())">Close</button>
        <button class="btn btn-outline-primary" type="submit" @onclick="(() => OnValidSubmit())">Confirm</button>
    </RadzenStack>
</RadzenStack>

@code
{
    private FirmClientDto _model;

    private EditContext _context;

    protected override void OnInitialized()
    {
        _model = new();
        _context = new(_model);
    }

    private async Task OnValidSubmit()
    {
        try
        {
            if (_context.Validate())
            {
                await fetch.ExecuteAsync(ClientEndpointActions.ADD_BASE, new SearchFilter(), ApiType.Post);

                notification.Notify(new NotificationMessage()
                {
                    Duration = 3000,
                    Detail = "Item has been added",
                    Summary = "Operation succeeded"
                });

                dialog.Close();
            }
        }
        catch(Exception ex)
        {
            notification.Notify(NotificationSeverity.Warning, "Something went wrong, please retry", null, 4000);
        }
    }
}
