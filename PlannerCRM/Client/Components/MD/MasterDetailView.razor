@typeparam TItem where TItem : class, new()

<div class="master-detail-container">
    <div class="filters-container">
        <div>
            <select @onchange="SetDisplayCount">
                @foreach (var count in Enum.GetValues(typeof(ItemsCount)))
                {
                    <option value="@((int) count)">@((int) count)</option>
                }
            </select>
        </div>
    </div>
    <div class="master-container">
        <RadzenDataGrid @ref="_grid"  TItem="@TItem" Data="Data" RowSelect="@OnRowSelect" RowDeselect="@OnRowDeselect"
            AllowPaging="AllowPaging" AllowFiltering="AllowFiltering" AllowSorting="AllowSorting" FilterDelay="0">
            <Columns>
                @foreach (var prop in Properties)
                {
                    <RadzenDataGridColumn TItem="@TItem" Title="@prop" Property="@prop" />
                }
            </Columns>
            <FooterTemplate>
                @if (Data is not null)
                {
                    <tr >
                        <td>
                            <strong>Total items: @Data.Count</strong>
                        </td>
                        <td></td>

                        <td style="text-align:center;float: right; padding-right: 10px;  justify-content:center; display: inline;" colspan="2">
                            <button @onclick="LoadMoreItems" class="btn btn-info">
                                Load more @_count items
                            </button>
                        </td>
                    </tr>
                }
            </FooterTemplate>
        </RadzenDataGrid>
    </div>
    <div class="side-container">
        <div class="detail-container">
            <RadzenPanel class="radzen-panel">            
                @if (_selectedItem is not null)
                {
                    <RadzenCard>
                        @foreach (var prop in Properties)
                        {
                            <p>@prop: @_selectedItem.GetType().GetProperty(prop).GetValue(_selectedItem)</p>
                        }
                    </RadzenCard>
                    <div class="edit-delete-btns-container">
                        <div class="delete-btn">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Text="Delete" Click="@DeleteSelected" />
                        </div>
                        <div class="edit-btn">
                            <RadzenButton ButtonStyle="ButtonStyle.Success" Text="Edit" Click="@EditSelected" />
                        </div>
                    </div>
                }
                else
                {
                    <RadzenCard>
                        <p>Please select an item.</p>
                    </RadzenCard>
                }
            </RadzenPanel>
        </div>
        <div class="additional-data-container">
            @AdditionalContent(default)
        </div>
    </div>
</div>