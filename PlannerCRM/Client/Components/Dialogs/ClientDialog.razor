@inject DialogService ds
@inject FetchService<FirmClientDto> fs

<RadzenStack AlignItems="AlignItems.Start" Orientation="Orientation.Horizontal">
    <RadzenRow>
        <RadzenColumn>
            <RadzenText TextStyle="TextStyle.H6">Name: @SelectedClient.Name</RadzenText>
            <RadzenText TextStyle="TextStyle.H6">Vat Number: @SelectedClient.VatNumber</RadzenText>
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack AlignItems="AlignItems.Start" Orientation="Orientation.Horizontal">
        <RadzenButton ButtonStyle="ButtonStyle.Info" 
                      Variant="Variant.Text" 
                      Text="Close" 
                      Click="(() => ds.Close())">
        </RadzenButton>
    </RadzenStack>
    <RadzenStack AlignItems="AlignItems.End" Orientation="Orientation.Horizontal">
        <RadzenButton ButtonType="ButtonType.Button" 
                      ButtonStyle="ButtonStyle.Danger" 
                      Variant="Variant.Outlined"
                      Click="(() => OnDelete())"
                      Text="Delete">
        </RadzenButton>
        <RadzenButton ButtonType="ButtonType.Button" 
                      ButtonStyle="ButtonStyle.Primary" 
                      Variant="Variant.Outlined" 
                      Click="(() => OnEdit())"
                      Text="Edit">
        </RadzenButton>
    </RadzenStack>
</RadzenStack>

@code
{
    [Parameter] public FirmClientDto SelectedClient { get; set; }

    private async Task OnEdit()
    {
        await ds.OpenAsync<ClientEditForm>("Edit client",
            new Dictionary<string, object>()
            {
                { nameof(ClientEditForm.Model), SelectedClient }
            }
        );
    }

    private async Task OnDelete()
    {
        await ds.OpenAsync<ClientAlertDeleteDialog>("Delete item",
            new Dictionary<string, object>()
            {
                { nameof(ClientAlertDeleteDialog.Model), SelectedClient }
            }
        );
    }
}
