@using PlannerCRM.Shared.Constants.ApiHelpers.Common
@inject DialogService ds
@inject FetchService<ActivityDto> fs

<RadzenStack AlignItems="AlignItems.Start" Orientation="Orientation.Vertical">
    <RadzenStack>
        <RadzenRow>
            <RadzenFieldset Text="Client Information">
                <RadzenColumn>
                    <RadzenText>Name: @SelectedActivity.WorkOrder.FirmClient.Name</RadzenText>
                    <RadzenText>Vat Number: @SelectedActivity.WorkOrder.FirmClient.VatNumber</RadzenText>
                </RadzenColumn>
            </RadzenFieldset>
            <RadzenFieldset Text="Work Order Information">
                <RadzenColumn>
                    <RadzenText>Name: @SelectedActivity.WorkOrder.Name</RadzenText>
                    <RadzenText>Start Date: @SelectedActivity.WorkOrder.StartDateString</RadzenText>
                    <RadzenText>End Date: @SelectedActivity.WorkOrder.EndDateString</RadzenText>
                </RadzenColumn>
            </RadzenFieldset>
        </RadzenRow>
        <RadzenRow>
            <RadzenFieldset Text="Activity Information">
                <RadzenColumn>
                    <RadzenText>Name: @SelectedActivity.Name</RadzenText>
                    <RadzenText>Start Date: @SelectedActivity.StartDateString</RadzenText>
                    <RadzenText>End Date: @SelectedActivity.EndDateString</RadzenText>
                </RadzenColumn>
            </RadzenFieldset>
        </RadzenRow>
    </RadzenStack>
    <RadzenStack AlignItems="AlignItems.End">
        <RadzenRow>
            <RadzenColumn>
                <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Outlined" Text="Delete" Click="OnDelete"></RadzenButton>
                <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Outlined" Text="Edit" Click="OnEdit"></RadzenButton>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
</RadzenStack>

@code
{
    [Parameter] public ActivityDto SelectedActivity { get; set; }

    private async Task OnEdit()
    {
        await ds.OpenAsync<ActivityEditForm>("Edit Activity",
            new Dictionary<string, object>()
            {
                { nameof(ActivityEditForm.Model), SelectedActivity }
            },
            new DialogOptions() { Width="40vw;" }
        );
    }

    private async Task OnDelete()
    {
        if ((await ds.Confirm("Confirm this item removal", "Delete activity", new() { OkButtonText = "Delete" })).Value)
        {
            await fs.Create(
                EndpointsNames.ACTIVITY,
                EndpointsCrudActions.DELETE,
                SelectedActivity
            );
        }
    }
}
