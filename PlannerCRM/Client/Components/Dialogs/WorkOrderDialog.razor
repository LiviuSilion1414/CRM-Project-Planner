@inject DialogService ds
@inject FetchService<WorkOrderDto> fs

<RadzenStack AlignItems="AlignItems.Start" Orientation="Orientation.Vertical">
    <RadzenStack>
        <RadzenRow>
            <RadzenFieldset Text="Client Info">
                <RadzenColumn>
                    <RadzenText TextStyle="TextStyle.DisplayH6" Text="Client"></RadzenText>
                    <RadzenText>Name: @SelectedWorkOrder.FirmClient.Name</RadzenText>
                    <RadzenText>Vat Number: @SelectedWorkOrder.FirmClient.VatNumber</RadzenText>
                </RadzenColumn>
            </RadzenFieldset>
            <RadzenFieldset Text="WorkOrder Info">
                <RadzenColumn>
                    <RadzenText TextStyle="TextStyle.DisplayH6" Text="WorkOrder"></RadzenText>
                    <RadzenText>Name: @SelectedWorkOrder.Name</RadzenText>
                    <RadzenText>Start Date: @SelectedWorkOrder.StartDateString</RadzenText>
                    <RadzenText>End Date: @SelectedWorkOrder.EndDateString</RadzenText>
                </RadzenColumn>
            </RadzenFieldset>
        </RadzenRow>
        <RadzenRow>
            <RadzenFieldset Text="Related Activities">
                <RadzenColumn>
                    <RadzenDataGrid TItem="@ActivityDto" Data="@SelectedWorkOrder.Activities">
                        <Columns>
                            <RadzenDataGridColumn Title="@nameof(WorkOrderDto.Name)" Property="@nameof(ActivityDto.Name)"></RadzenDataGridColumn>
                            <RadzenDataGridColumn Title="@nameof(WorkOrderDto.StartDate)" Property="@nameof(ActivityDto.StartDateString)"></RadzenDataGridColumn>
                            <RadzenDataGridColumn Title="@nameof(WorkOrderDto.EndDate)" Property="@nameof(ActivityDto.EndDateString)"></RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                </RadzenColumn>
            </RadzenFieldset>
        </RadzenRow>
    </RadzenStack>
    <RadzenStack AlignItems="AlignItems.End">
        <RadzenRow>
            <RadzenColumn>
                <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Outlined" Text="Delete" Click="OnDelete"></RadzenButton>
                <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Outlined" Text="Edit" Click="OnEdit"></RadzenButton>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
</RadzenStack>

@code
{
    [Parameter] public WorkOrderDto SelectedWorkOrder { get; set; }

    private async Task OnEdit()
    {
        await ds.OpenAsync<WorkOrderEditForm>("Edit WorkOrder",
            new Dictionary<string, object>()
            {
                { nameof(WorkOrderEditForm.Model), SelectedWorkOrder }
            },
            new DialogOptions() { Width="40vw;" }            
        );
    }

    private async Task OnDelete()
    {
        if ((await ds.Confirm("Confirm this item removal", "Delete workorder", new() { OkButtonText = "Delete" })).Value)
        {
            await fs.Create(
                EndpointsNames.ACTIVITY,
                EndpointCrudActions.DELETE,
                SelectedWorkOrder
            );
        }
    }
}
