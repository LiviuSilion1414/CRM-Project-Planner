@using System.Globalization

<div class="calendar-container">
    <ItemActions TItem="@ActivityDto" DataContainer="@DataContainer" OnChosenAction="GetChosenAction" />
    <div class="calendar-header">
        <NavigationControls 
                CurrentDate="@CurrentDate" 
                CurrentView="@CurrentView" 
                OnGoToTodaySet="@GoToToday" 
                OnPreviousPeriodSet="@PreviousPeriod" 
                OnNextPeriodSet="@NextPeriod"
                OnViewSet="@SetView"/>
    </div>
    @if (SelectedMetadata.ComponentType is not null)
    {
        <DynamicComponent Type="@SelectedMetadata.ComponentType" Parameters="@SelectedMetadata.Parameters" />
    }

    <DataGridViewItemHandler TItem="@ActivityDto"
                             AddAction="@(async activity => await ActivityFetchService.Create(ControllersNames.ACTIVITY, CrudApiManager.ADD, activity))"
                             UpdateAction="@(async activity => await ActivityFetchService.Update(ControllersNames.ACTIVITY, CrudApiManager.EDIT, activity))"
                             DeleteAction="@(async activity => await DeleteActivity(activity))"
                             DeleteMultipleAction="@(async activities => await DeleteMultipleActivities(activities))">
        <AddFormMarkup>
            <ActivityAddForm />
        </AddFormMarkup>
        <EditFormMarkup>
            <ActivityEditForm />
        </EditFormMarkup>
        <ViewDetailsMarkup>
            <ActivityViewForm />
        </ViewDetailsMarkup>
    </DataGridViewItemHandler>
</div>
