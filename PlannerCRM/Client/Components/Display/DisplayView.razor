<div class="filters-container">
    <div>
        <select @onchange="SetDisplayCount">
            @foreach (var count in Enum.GetValues(typeof(ItemsCount)))
            {
                <option value="@((int) count)">@((int)count)</option>
            }
        </select>
    </div>
</div>

@code {
    [Parameter] public int CurrentItems { get; set; }
    [Parameter] public EventCallback<int> DisplayCount { get; set; }
    [Parameter] public EventCallback<PaginationHelper> OnLoadMoreItems { get; set; }

    private PaginationHelper _paginationHelper;
    private int _count = (int) ItemsCount.T25;

    private async Task SetDisplayCount(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int displayCount))
        {
            _count = displayCount;
            await DisplayCount.InvokeAsync(displayCount);
        }
    }

    private async Task SetDisplayCount(int displayCount) => await DisplayCount.InvokeAsync(displayCount);

    private async Task LoadMoreItems()
    {
        _paginationHelper.Offset = CurrentItems; 
        _paginationHelper.Limit = _count;
        await OnLoadMoreItems.InvokeAsync(_paginationHelper);
    }
}
