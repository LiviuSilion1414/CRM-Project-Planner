@if (DataContainer is not null)
{
    <div>
        <p><strong>Client</strong></p>
        <p style="text-indent: 40px;">Name: @DataContainer.DataManager.SelectedItem.FirmClient.Name</p>
        <p style="text-indent: 40px;">Vat Number: @DataContainer.DataManager.SelectedItem.FirmClient.VatNumber</p>
        <br />
        <p><strong>Activities (@(_activities.Count))</strong></p>
        @foreach (var ac in _activities)
        {
            <p style="text-indent: 40px;">Name: @ac.Name</p>
        }
    </div>
}

@code {
    [Inject] public IFetchService<ActivityDto> ActivityFetchService { get; set; }

    [CascadingParameter] public CascadingDataContainer<WorkOrderDto> DataContainer { get; set; }
    private List<ActivityDto> _activities = [];

    protected override async Task OnParametersSetAsync()
        => await GetAssociatedActivities(DataContainer.DataManager.SelectedItem);

    private async Task GetAssociatedActivities(WorkOrderDto workOrder)
        => _activities = await ActivityFetchService.GetAll(ControllersNames.WORK_ORDER, WorkOrderApiManager.FindAssociatedActivitiesByWorkOrderId(workOrder.Id));
}
