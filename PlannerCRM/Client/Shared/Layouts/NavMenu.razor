<h3>NavMenu</h3>
<RadzenLayout>
    <RadzenSidebar Responsive="true" Style="@_sidebarStyle">
        <RadzenPanelMenu DisplayStyle="@_panelMenuDisplayStyle" Match="NavLinkMatch.All">
            <RadzenPanelMenuItem Icon="@_menuStatus" Click="OnMenuExpansion"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Icon="home" Path="/home" Text="Home"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Icon="schedule" Path="/recently" Text="Recently"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Icon="task" Path="/tasks" Text="Tasks"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Icon="contacts" Path="contacts" Text="Contacts"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Icon="monitoring" Path="/statistics" Text="Statistics"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Icon="event" Path="/calendar" Text="Calendar"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Icon="picture_as_pdf" Path="/invoices" Text="Invoices"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Icon="settings" Path="/settings" Text="Settings"></RadzenPanelMenuItem>
        </RadzenPanelMenu>
    </RadzenSidebar>
</RadzenLayout>

@code {
    private bool _isExpanded = true;
    private string _menuStatus = MenuStatus.CLOSE;

    private string _sidebarStyle
    {
        get
        {
            return _isExpanded ? "width: 250px;" : "width: auto";
        }
    }

    private MenuItemDisplayStyle _panelMenuDisplayStyle
    {
        get
        {
            return _isExpanded ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon;
        }
    }

    private void OnMenuExpansion()
    {
        _isExpanded = !_isExpanded;
        if (!_isExpanded)
        {
            _menuStatus = MenuStatus.OPEN;
        }
        else
        {
            _menuStatus = MenuStatus.CLOSE;
        }
    }

    public static class MenuStatus
    {
        public const string CLOSE = "close";
        public const string OPEN = "menu";
    }
}