
<Modal Title="@Title" Size="@ModalSize.EXTRA_LARGE">
    <Body>
        @if (_isError) {
            <Feedback Severity="@CssSeverity.DANGER" Message="@_message" OnClickCancel=@OnClickHideBanner/> 
        }
        <div id="before-modal-body">
            <EditForm EditContext="@_editContext" OnValidSubmit="OnClickModalConfirm">
                <CascadingValue Value="@_errors">
                    <CustomDataAnnotationsValidator @ref="CustomValidator"/>
                    @if (FormMode == OperationType.ADD)
                    {
                        @if (_workOrderHasBeenSet) {
                            <div class="form-group">
                                <i class="bi bi-person"></i>
                                <label for=>Cliente</label>
                                <InputText type="search" @bind-Value="Model.ClientName" class="form-control" disabled=@_isDisabled readonly="@_isDisabled"/>
                            </div>
                        }
                        <div class="form-group">
                            <i class="bi bi-briefcase"></i>
                            <label for="Nome commessa">Commessa</label>
                            <SearchBox
                                GetSearchedItems="@HandleSearchedWorkOrders"/>

                            <ItemsList
                                T ="@WorkOrderSelectDto"
                                Items="@_workOrders"
                                PropertyKeys="@(new List<string>(){"Name"})"
                                GetSelectedItem="@HandleChosenWorkOrder"/>
                            <CustomValidationMessage FieldName="@nameof(Model.WorkOrderId)"/>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <i class="bi bi-briefcase"></i>
                            <label for="Nome commessa">Commessa</label>
                            <InputText class="form-control" @bind-Value="Model.SelectedWorkOrder" disabled=@_isDisabled readonly=@_isDisabled />
                        </div>
                    }

                    <div class="form-group">
                        <i class="bi bi-fonts"></i>
                        <label for="Nome attività">Nome</label>
                        <InputText class="form-control" @bind-Value="Model.Name"/>
                        <CustomValidationMessage FieldName="@nameof(Model.Name)" />
                    </div>
                    <div class="form-group">
                        <i class="bi bi-calendar3"></i>
                        <label for="Data d'inizio">Data d'inizio</label>
                        <InputDate class="form-control" @bind-Value="@Model.StartDate"/>
                        <CustomValidationMessage FieldName="@nameof(Model.StartDate)" />
                    </div>
                    <div class="form-group">
                        <i class="bi bi-calendar3"></i>
                        <label for="Data di fine">Data di fine</label>
                        <InputDate class="form-control" @bind-Value="@Model.FinishDate"/>
                        <CustomValidationMessage FieldName="@nameof(Model.FinishDate)" />
                    </div>
                    <div class="form-group">
                        <i class="bi bi-people"></i>
                        <label for="Assegna dipendenti">Assegna a dipendenti</label>
                        <SearchBox
                            GetSearchedItems="@HandleSearchedEmployees"/>

                        <ItemsList
                            T ="@EmployeeSelectDto"
                            Items="@_employees"
                            PropertyKeys="@(new List<string>(){"FullName"})"
                            GetSelectedItem="@HandleChosenEmployee"/>
                    </div>
                    <div class="container">
                        <span>Dipendenti selezionati per questa attività: @Model.ViewEmployeeActivity.Count</span> <br>
                            <div>
                                <table class="table table-sm">
                                    <thead>
                                        <th>Ruolo</th>
                                        <th>Nome</th>
                                        <th>Email</th>
                                        <th></th>
                                    <th></th>
                                    </thead>
                                    <tbody>
                                        @if (Model.ViewEmployeeActivity.Any()) {
                                            @foreach (var ea in Model.ViewEmployeeActivity) {
                                                <tr>
                                                    <td>@(ea.Employee.Role.ToString().Replace('_', ' '))</td>
                                                    <td>@ea.Employee.FullName</td>
                                                    <td> 
                                                        <i class="bi bi-envelope-at"></i>
                                                        <span> @ea.Employee.Email </span>
                                                    </td>
                                                    <td>
                                                        <button type="button" class="btn btn-danger" value="@ea.Employee" title="Rimuovi impiegato"
                                                            @onclick="(() => OnClickRemoveAsSelected(ea.Employee))">Elimina</button>
                                                    </td>
                                                </tr>
                                            }
                                        } else { 
                                            <tr>
                                                <td></td>
                                                <td><strong>Nessun dipendente selezionato.</strong></td>
                                                <td></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <br>
                            </div>
                    </div>
                    <CustomValidationMessage FieldName="@nameof(Model.ViewEmployeeActivity)"/>
                </CascadingValue>
                <NavigationLock ConfirmExternalNavigation="@NavigationLockService.ConfirmedExternalExit" 
                    OnBeforeInternalNavigation="@NavigationUtil.ConfirmInternalExit"/>
            </EditForm>
        </div>
    </Body>
    <Footer>
        <div id="confirm">
            <button type="submit" class="btn btn-primary" @onclick=@OnClickModalConfirm>Conferma</button>
        </div>
    </Footer>
</Modal>