@page "/operation-manager"
@using PlannerCRM.Shared.DTOs.Workorder.Views
@using PlannerCRM.Shared.Models

@inject HttpClient httpClient
@inject NavigationManager navManager

@attribute [Authorize(Roles = nameof(Roles.OPERATION_MANAGER))]

<PageTitle>Operation Manager</PageTitle>

<div class="parent">
    <div class="child">
        <button class="btn btn-primary" @onclick="OnClickAddWorkorder">
            <span class="oi oi-plus"></span>
            Aggiungi commessa
        </button>
    </div>
    
    @if (_workorders.Count != 0) {
        <div class="child">
            <button class="btn btn-primary" @onclick="OnClickAddActivity">
                <span class="oi oi-plus"></span>
                Aggiungi attività
            </button>
        </div>
    }
</div>

<table class="table">
    <thead>
        <tr>
            @if (!trIsClicked) {
                <th scope="col">Nome</th>
                <th scope="col">Data d'inizio</th>
                <th scope="col">Data fine</th>
                <th scope="col"></th>
                <th scope="col"></th>
            } else {
                <th scope="col">Nome</th>
                <th scope="col">Data d'inizio</th>
                <th scope="col">Data fine</th>
                <th scope="col">Attività</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var wo in _workorders) {
            <tr @onclick="(() => OnClickTableRow())">
                <td>@wo.Name</td>
                <td>@wo.StartDate.ToShortDateString()</td>
                <td>@wo.FinishDate.ToShortDateString()</td>
                @if (trIsClicked) {
                    <tr> <OperationManagerMasterDetails Id="wo.Id"/> </tr>
                } else {
                    <td>
                        <button type="button" class="btn btn-primary" @onclick="@(() => OnClickEdit(wo.Id))">Modifica</button>                
                    </td> 
                    <td> 
                        <button type="button" class="btn btn-danger" @onclick="@(() => OnClickDelete(wo.Id))">Elimina</button>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@code {
    private List<WorkorderViewDTO> _workorders = new();
    private bool trIsClicked = false;

    protected override async Task OnInitializedAsync() {
        _workorders = await httpClient.GetFromJsonAsync<List<WorkorderViewDTO>>("http://localhost:5032/workorder/get/all");
    }
    
    public void OnClickTableRow() {
        if (trIsClicked) {
            trIsClicked = false;
        } else {
            trIsClicked = true;
        }
    }

    public void OnClickAddWorkorder() {
        navManager.NavigateTo("/operation-manager/add/workorder");
    }

    public void OnClickAddActivity() {
        navManager.NavigateTo("/operation-manager/add/activity");
    }

    public void OnClickEdit(int id) {
        navManager.NavigateTo($"/operation-manager/edit/workorder/{id}");
    }

    public void OnClickDelete(int id) {
        navManager.NavigateTo($"/operation-manager/delete/workorder/{id}");
    }

}
