@using PlannerCRM.Shared.DTOs.Workorder.Views
@using PlannerCRM.Shared.DTOs.ActivityDto.Forms

@inject HttpClient httpClient
@inject NavigationManager navManager

@if (_activities.Count() == 0) {
    <td><p><em>Nessun'attività assegnata.</em></p></td>
} else {
    <div class="master-detail">
        <div class="container-fluid">
            <h3>Attività</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Nome</th>
                        <th>Data d'inizio</th>
                        <th>Data di fine</th>
                        <th>Dipendenti assegnati</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ac in _activities) {
                        <tr>
                            <td><span class="oi oi-puzzle-piece"></span></td>
                            <td>@ac.Name</td>
                            <td>@ac.StartDate?.ToShortDateString()</td>
                            <td>@ac.FinishDate?.ToShortDateString()</td>
                            <td>
                                @foreach (var ea in ac.EmployeesActivities) {
                                    <tr>
                                        <td>
                                            @ea.Employee.Email
                                        </td>
                                    </tr>
                                }
                            </td>
                            <td>
                                <button type="button" class="btn btn-primary" 
                                    @onclick="@(() => OnClickEdit(ac.Id))">
                                     <span class="oi oi-pencil"></span>
                                </button>                
                            </td> 
                            <td> 
                                <button type="button" class="btn btn-danger" 
                                    @onclick="@(() => OnClickDelete(ac.Id))">
                                    <span class="oi oi-trash"></span>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }
    private WorkOrderViewDto _workorder = new(); 
    private List<ActivityFormDto> _activities = new();

    protected override async Task OnInitializedAsync() {
        _workorder = await httpClient.GetFromJsonAsync<WorkOrderViewDto>($"http://localhost:5032/workorder/get/for/view/{Id}");
        _activities = await httpClient.GetFromJsonAsync<List<ActivityFormDto>>($"http://localhost:5032/activity/get/activity/per/workorder/{_workorder.Id}"); 
    }

    public void OnClickEdit(int activityId) {
        navManager.NavigateTo($"/operation-manager/edit/activity/{_workorder.Id}/{activityId}");
    }

    public void OnClickDelete(int activityId) {
        navManager.NavigateTo($"/operation-manager/delete/activity/{_workorder.Id}/{activityId}");
    }
}