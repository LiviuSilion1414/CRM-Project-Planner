@inject HttpClient httpClient

@using PlannerCRM.Shared.DTOs.Workorder.Views
@using PlannerCRM.Shared.DTOs.ActivityDto.Forms

@inject NavigationManager navManager

@if (activities.Count == 0) {
    <p><em>Nessun'attivit√† assegnata</em></p>
} else {
    <table class="table">
        <thead>
            <tr>
                <th>Nome:</th>
                <th>Data d'inizio:</th>
                <th>Data di fine:</th>
                <th>Dipendenti assegnati:</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ac in activities) {
                <tr>
                    <td>@ac.Name</td>
                    <td>@ac.StartDate.ToShortDateString()</td>
                    <td>@ac.FinishDate.ToShortDateString()</td>
                    <td>
                        @foreach (var em in ac.EmployeesActivities) {
                            <tr>
                                <td>
                                    @em.Email
                                </td>
                            </tr>
                        }
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary" @onclick="@(() => OnClickEdit(ac.Id))">Modifica</button>                
                    </td> 
                    <td> 
                        <button type="button" class="btn btn-danger" @onclick="@(() => OnClickDelete(ac.Id))">Elimina</button>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter] public int Id { get; set; }
    public WorkorderViewDTO workorder = new(); 
    public List<ActivityForm> activities = new();

    protected override async Task OnInitializedAsync() {
        workorder = await httpClient.GetFromJsonAsync<WorkorderViewDTO>($"http://localhost:5032/workorder/get/for/view/{Id}");
        activities = await httpClient.GetFromJsonAsync<List<ActivityForm>>($"http://localhost:5032/activity/get/activity/per/workorder/{workorder.Id}"); 
    }

    public void OnClickEdit(int activityId) {
        navManager.NavigateTo($"/operation-manager/edit/activity/{workorder.Id}/{activityId}");
    }

    public void OnClickDelete(int activityId) {
        navManager.NavigateTo($"/operation-manager/delete/activity/{workorder.Id}/{activityId}");
    }
}

