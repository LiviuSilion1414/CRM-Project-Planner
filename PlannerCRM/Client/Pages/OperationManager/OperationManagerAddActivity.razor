@page "/operation-manager/add/activity"

@using PlannerCRM.Shared.DTOs.ActivityDto.Forms
@using PlannerCRM.Shared.DTOs.ActivityDto.Views
@using PlannerCRM.Shared.DTOs.Workorder.Views
@using PlannerCRM.Shared.DTOs.EmployeeDto.Forms
@using PlannerCRM.Shared.DTOs.EmployeeDto.Views

@using PlannerCRM.Shared.Models

@inject NavigationManager navManager
@inject HttpClient httpClient
@attribute [Authorize(Roles = nameof(Roles.OPERATION_MANAGER))]

<PageTitle>Operation Manager</PageTitle>

<div class="container-fluid">
    <h1>Aggiungi attività</h1>
    <EditForm Model="model" OnValidSubmit="OnClickAddActivity">
        <DataAnnotationsValidator />
        <div class="form-group">
            <div class="child">
                <div class="child">
                <label>Commessa: </label>
                    <input type="search" @bind="selectModel.SelectedWorkorder" class="form-control" />
                    <ul>
                        @foreach (var wo in workorders) {
                            <li class="dropdown-item" value="@wo" @onclick="(() => OnClickSetWorkorder(wo))"> @wo.Name </li>
                        }
                    </ul>
                </div>
                <div class="child">
                    <button type="button" class="btn btn-link"
                        @onclick="@(() => OnClickSearchWorkorder(selectModel.SelectedWorkorder))">Cerca</button>
                </div>
                <ValidationMessage For="@(() => model.WorkorderId)" />
            </div>
        </div>
        <div class="form-group">
            <label>*Nome:</label>
            <InputText class="form-control" type="text" @bind-Value="model.Name" />
            <ValidationMessage For="@(() => model.Name)" />
        </div>
        <div class="form-group">
            <label>*Data d'inizio:</label>
            <input class="form-control" type="date" @bind="@model.StartDate" />
            <ValidationMessage For="@(() => model.StartDate)" />
        </div>
        <div class="form-group">
            <label>*Data di fine:</label>
            <input class="form-control" type="date" @bind="@model.FinishDate" />
            <ValidationMessage For="@(() => model.FinishDate)" />
        </div>
        <div class="container-fluid">
            <div class="child">
                <label>*Assegna a dipendenti: </label>
                <input type="search" class="form-control" @bind="selectModel.SelectedEmployee" />
                @if (employees.Count != 0) {
                    <ul>
                        @foreach (var em in employees) {
                            <li class="dropdown-item" value="@em" @onclick="@(() => OnClickAddAsSelected(em))"> 
                                 @em.Email
                            </li>
                        }
                    </ul>
                }
            </div>
            <div class="child">
                <button type="button" class="btn btn-link"
                    @onclick="@(() => OnClickSearchEmployee(selectModel.SelectedEmployee))">Cerca</button>
            </div>
            <div class="container-selected-employees">
                <span>Dipendenti selezionati per questa attività: @model.EmployeesActivities.Count</span> <br>
                <table class="table table-striped">
                    <thead>
                        <th>Nome</th>
                        <th>Email</th>
                    </thead>
                    <tbody>
                        @if (model.EmployeesActivities.Count != 0) {
                            @foreach (var em in model.EmployeesActivities) {
                                <tr>
                                    <td> <span> @em.Email </span> </td>
                                    <td>
                                        <button type="button" class="btn btn-danger" value="@em"
                                        @onclick="(() => OnClickRemoveAsSelected(em))">Elimina</button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <br>
            </div>
        </div>
        <div class="wrapper-btn">
            <div class="btn-cancel">
                <button type="button" class="btn btn-link" @onclick="OnClickCancel">Annulla</button>
            </div>
            <div class="btn-confirm">
                <button type="submit" class="btn btn-primary">Conferma</button>
            </div>
        </div>
    </EditForm>
</div>

@code {
    public ActivityForm model = new();
    public ActivitySelectDTO selectModel = new();
    public List<WorkorderSelectDTO> workorders = new();
    public List<EmployeeSelectDTO> employees = new();
    public List<EmployeeViewDTO> users = new();

    protected override async Task OnInitializedAsync() {
       await Task.Run(() => model.EmployeesActivities = new());
    } 

    public async Task OnClickSearchWorkorder(string workorder) {
        workorders = await httpClient.GetFromJsonAsync<List<WorkorderSelectDTO>>($"http://localhost:5032/workorder/search/{workorder}");
    }
    public void OnClickSetWorkorder(WorkorderSelectDTO workorderSelect) {
        model.WorkorderId = workorderSelect.Id;
        selectModel.SelectedWorkorder = workorderSelect.Name;
    }

    public async Task OnClickSearchEmployee(string employee) {
        employees = await httpClient.GetFromJsonAsync<List<EmployeeSelectDTO>>($"http://localhost:5032/employee/search/{employee}");
    }

    public void OnClickAddAsSelected(EmployeeSelectDTO employee) {
        model.EmployeesActivities.Add(employee);
    }

    public void OnClickRemoveAsSelected(EmployeeSelectDTO employee) {
        if (model.EmployeesActivities.Contains(employee)) {
            model.EmployeesActivities.Remove(employee);
        }
    }
    
    public async Task OnClickAddActivity() {
        await httpClient.PostAsJsonAsync<ActivityForm>("http://localhost:5032/activity/add", model);

        navManager.NavigateTo("/operation-manager");
    }

    public void OnClickCancel() {
        navManager.NavigateTo("/operation-manager");
    }
}