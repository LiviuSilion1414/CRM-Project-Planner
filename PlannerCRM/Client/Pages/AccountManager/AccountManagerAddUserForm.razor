@page "/account-manager/add/user"

@using PlannerCRM.Shared.DTOs.EmployeeDto.Forms
@using PlannerCRM.Shared.Models
@using System.Text.Json

@inject NavigationManager navManager
@inject HttpClient httpClient
@attribute [Authorize(Roles = nameof(Roles.ACCOUNT_MANAGER))]

<PageTitle>Account Manager - Aggiungi utente</PageTitle>

<div class="container-fluid">
    <h1>Aggiungi utente</h1>
    <EditForm Model="@model" OnValidSubmit="OnClickConfirm" class="form">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <label>*First Name:</label>
            <InputText class="form-control" type="text" @bind-Value="model.FirstName" />
            <ValidationMessage For="@(() => model.FirstName)"/>
        </div>
        <div class="form-group">
            <label>*Last Name:</label>
            <InputText class="form-control" type="text" @bind-Value="model.LastName" />
            <ValidationMessage For="@(() => model.LastName)"/>
        </div>
        <div class="form-group">
            <label>*Email:</label>
            <InputText class="form-control" type="email" @bind-Value="model.Email" />
            <ValidationMessage For="@(() => model.Email)" />
        </div>
        <div class="form-group">
            <label>*Data di nascita:</label>
            <input class="form-control" type="date" @bind="@model.BirthDay" />
            <ValidationMessage For="@(() => model.BirthDay)" />
        </div>
        <div class="form-group">
            <label>*Data inizio:</label>
            <input class="form-control" type="date" @bind="@model.StartDate" />
            <ValidationMessage For="@(() => model.StartDate)" />
        </div>
        <div class="form-group">
            <label>*Codice fiscale:</label>
            <InputText aria-required="true" class="form-control" type="text" @bind-Value="model.NumericCode" />
            <ValidationMessage For="@(() => model.NumericCode)" />
        </div>
        <div class="form-group">
            <label>*Ruolo
                <div class="form-control">
                    <InputSelect  class="dropdown-item" @bind-Value="model.Role">
                        @foreach (var role in Enum.GetValues(typeof(Roles))) {
                            if ((Roles)role != Roles.ACCOUNT_MANAGER) {
                                <option value="@role">@role</option>
                            }
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => model.Role)" />
                </div>
            </label>
        </div>
        <div class="form-group">
            <label>*Tariffa oraria</label>
            <InputNumber class="form-control" @bind-Value="model.HourPay" />
            <ValidationMessage For="@(() => model.HourPay)" />
        </div>
        <div class="form-group">
            <label for="Name">*Password</label>
            <InputText class="form-control" type="password" @bind-Value="model.Password" />
            <ValidationMessage For="@(() => model.Password)" />
        </div>
        <div class="wrapper-btn">
            <div class="btn-cancel">
                <button type="button" class="btn btn-link" @onclick="OnClickCancel">Annulla</button>
            </div>
            <div class="btn-confirm">
                <button type="submit" class="btn btn-primary">Conferma</button>
            </div>
        </div>
    </EditForm>
</div>

@code {
    private EmployeeAddDTO model = new EmployeeAddDTO();
    private string errorMessage = "";
    private bool isError = false;

    private void OnClickCancel() {
        navManager.NavigateTo("/account-manager");
    }

    private async void OnClickConfirm() {
        var addIdentityAccountLogin = await httpClient.PostAsJsonAsync<EmployeeAddDTO>("http://localhost:5032/account/add/user", model);
        var addIdentityEmployee = await httpClient.PostAsJsonAsync<EmployeeAddDTO>("http://localhost:5032/employee/add", model);

        navManager.NavigateTo("/account-manager");
    }
}