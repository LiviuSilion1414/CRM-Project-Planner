<div class="filter-box">
    <OptionsFilter
        Actions=@_filters/>
</div>

<div class="search-box">
    <SearchBox
        GetSearchedItems=@HandleSearchedElements/>
</div>

<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
                @foreach (var order in _orderTitles) {
                    <th scope="col" class="@SetStyle(order.Key)" @onclick="@(() => HandleOrdering(order.Key))">
                        <span>
                            <i class="bi bi-arrow-down"></i>
                            @order.Key
                        </span>
                    </th>
                }
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var ac in _filteredList) {
            <tr>
                <td><i class="bi bi-briefcase"></i></td> 
                <td>@ac.ClientName</td>
                <td>@ac.WorkOrderName</td>
                <td>@ac.Name</td>
                <td>@ac.StartDate.ToString("dd/MM/yyyy")</td>
                <td>@ac.FinishDate.ToString("dd/MM/yyyy")</td>
                @if (_workTimeRecords is null) {
                    <td><em>Nessun orario.</em></td>
                } else {
                    <td>
                        @foreach (var wtr in _workTimeRecords.Distinct()) {
                            if (wtr.ActivityId == ac.Id) {
                                @wtr.Hours
                            }
                        }
                    </td>
                }
                <td>
                    <span class="info"  @onclick="@(() => OnClickAddWorkedHours(ac.Id))">
                        <i class="bi bi-clock-history"></i>
                        Aggiungi orario
                    </span>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (!_activities.Any()) {
    <p class="text-center">@Titles.NOT_AVAILABLE_ACTIVITIES</p>
}

@if (_isAddClicked) {
    <ModalAddHours ActivityId="@_activityId" EmployeeId="@EmployeeId"/>
}

@if (_activities.Any()) {
    <Paginator
        CollectionSize=@_collectionSize
        Paginate="@((args) => HandlePaginate(args.Item1, args.Item2))"/>
}