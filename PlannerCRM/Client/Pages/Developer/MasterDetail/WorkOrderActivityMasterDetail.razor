@using PlannerCRM.Shared.DTOs.Workorder.Views
@using PlannerCRM.Shared.DTOs.ActivityDto.Forms
@using PlannerCRM.Shared.DTOs.WorkTimeDto.Views
@using PlannerCRM.Shared.Models

@inject HttpClient httpClient
@inject NavigationManager navManager

@attribute [Authorize(Roles = nameof(Roles.SENIOR_DEVELOPER))]
@attribute [Authorize(Roles = nameof(Roles.JUNIOR_DEVELOPER))]

@if (_activities == null) {
    <p><em>Non ti è stata ancora assegnata alcuna attività.</em></p>
} else {
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Commessa</th>
                <th>Nome</th>
                <th>Data d'inizio</th>
                <th>Data di fine</th>
                <th>Ore segnate</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ac in _activities) {
                <tr>
                    <td><span class="oi oi-briefcase"></span></td>
                    <td>
                        @foreach (var wo in _workorders) {
                            if (wo.Id == ac.WorkOrderId) {
                                @wo.Name;
                            }
                        }
                    </td>
                    <td>@ac.Name</td>
                    <td>@ac.StartDate?.ToShortDateString()</td>
                    <td>@ac.FinishDate?.ToShortDateString()</td>
                    @if (_workTimeRecords == null || _workTimeRecords.Count == 0) {
                        <td><em>Nessun orario</em></td>
                    } else {
                        <td>
                            @foreach (var wtr in _workTimeRecords) {
                                if (wtr.ActivityId == ac.Id) {
                                     @wtr.Hours
                                }
                            } 
                        </td>
                    }
                    <td>
                        <button type="button" class="btn btn-primary" 
                            @onclick="@(() => OnClickAddWorkedHours(ac.Id))">
                            <span class="oi oi-clock"></span>
                            <span>Aggiungi orario</span>
                        </button> 
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter] public int Id { get; set; } //EmployeeId
    private List<WorkOrderViewDto> _workorders = new();
    private List<ActivityFormDto> _activities = new();
    private List<WorkTimeRecordViewDto> _workTimeRecords = new();

    protected override async Task OnInitializedAsync() {
        _activities = await httpClient.GetFromJsonAsync<List<ActivityFormDto>>($"http://localhost:5032/activity/get/activity/per/employee/{Id}"); 
        var listSizeByEmployeeId = await httpClient.GetFromJsonAsync<int>($"http://localhost:5032/worktimerecord/get/size/by/employee/{Id}");
    
        if (listSizeByEmployeeId != 0) {
            _workTimeRecords = await httpClient.GetFromJsonAsync<List<WorkTimeRecordViewDto>>($"http://localhost:5032/worktimerecord/get/all/by/employee/{Id}");
        }

        foreach(var ac in _activities) {
            var workorder = await httpClient.GetFromJsonAsync<WorkOrderViewDto>($"http://localhost:5032/workorder/get/for/view/{ac.WorkOrderId}");
            _workorders.Add(workorder);
        }
    }

    private void OnClickAddWorkedHours(int activityId) {
        navManager.NavigateTo($"/developer/add/worked-hours/{Id}/{activityId}");
    }
}