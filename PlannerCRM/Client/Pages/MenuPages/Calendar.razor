@page "/calendar"

<RadzenScheduler TItem="ActivityDto"
                 Style="height: 90vh;"
                 Data=@_activities
                 Culture="CultureInfo.InvariantCulture"
                 SlotSelect="@OnAdd"
                 AppointmentSelect="@OnSelect"
                 StartProperty="@nameof(ActivityDto.StartDate)"
                 EndProperty="@nameof(ActivityDto.EndDate)"
                 TextProperty="@nameof(ActivityDto.Name)"
                 SelectedIndex="2">
    <RadzenDayView />
    <RadzenWeekView />
    <RadzenMonthView />
    <RadzenYearView />
</RadzenScheduler>

@code {
    private List<ActivityDto> _activities = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        var result = await fetch.ExecuteAsync(ActivityEndpointActions.GetWithPagination(100, 0), new SearchFilter(), ApiType.Post);
        _activities = JsonSerializer.Deserialize<List<ActivityDto>>(result.Data.ToString());
    }

    private async Task OnSelect(SchedulerAppointmentSelectEventArgs<ActivityDto> args)
    {
        await dialog.OpenAsync<ActivityDialog>("Activity Information",
            new Dictionary<string, object>() { { nameof(ActivityDialog.SelectedActivity), args.Data } },
            new DialogOptions() { Width = "40vw;" }
        );
    }

    private async Task OnAdd(SchedulerSlotSelectEventArgs args)
    {
        await dialog.OpenAsync<ActivityAddForm>("Add Activity",
            new() 
            {
                { nameof(ActivityAddForm.StartDate), args.Start },
                { nameof(ActivityAddForm.EndDate), args.End }
            },
            new DialogOptions() { Width = "40vw;" }
        );
    }
}