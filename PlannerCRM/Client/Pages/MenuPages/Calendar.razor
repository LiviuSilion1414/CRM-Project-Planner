@page "/calendar"

<h4>Calendar</h4>
<PageTitle>Calendar</PageTitle>

@if (fetch.IsBusy)
{
    <Loader />
}
else
{
    <RadzenScheduler TItem="ActivityDto"
                     Style="height: 90vh;"
                     Data=@_activities
                     Culture="CultureInfo.InvariantCulture"
                     SlotSelect="@OnAdd"
                     AppointmentSelect="@OnSelect"
                     StartProperty="@nameof(ActivityDto.startDate)"
                     EndProperty="@nameof(ActivityDto.endDate)"
                     TextProperty="@nameof(ActivityDto.name)"
                     SelectedIndex="2">
        <RadzenDayView />
        <RadzenWeekView />
        <RadzenMonthView />
        <RadzenYearView />
    </RadzenScheduler>
}
@code {
    private List<ActivityDto> _activities = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            fetch.IsBusy = true;

            var result = await fetch.ExecuteAsync(ApiUrl.ACTIVITY_CONTROLLER, ApiUrl.ACTIVITY_LIST, new ActivityFilterDto(), ApiType.Post);
            if (result.data is not null)
            {
                _activities = JsonSerializer.Deserialize<List<ActivityDto>>(result.data.ToString());
            }
            fetch.IsBusy = false;
        }
        catch 
        {
            notification.Notify(NotificationSeverity.Warning, "Something went wrong, please retry", null, 4000);
        }
    }

    private async Task OnSelect(SchedulerAppointmentSelectEventArgs<ActivityDto> args)
    {
        await dialog.OpenAsync<ActivityDialog>("Activity Information",
            new Dictionary<string, object>() { { nameof(ActivityDialog.SelectedActivity), args.Data } },
            new DialogOptions() { Width = "40vw;" }
        );
    }

    private async Task OnAdd(SchedulerSlotSelectEventArgs args)
    {
        await dialog.OpenAsync<ActivityAddForm>("Add Activity",
            new()
            {
                { nameof(ActivityAddForm.StartDate), args.Start },
                { nameof(ActivityAddForm.EndDate), args.End }
            },
            new DialogOptions() { Width = "40vw;" }
        );
    }
}