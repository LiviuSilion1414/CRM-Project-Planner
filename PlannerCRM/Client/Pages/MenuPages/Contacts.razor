@page "/contacts"

<h3>Clients</h3>
<PageTitle>Clients</PageTitle>

@code {
    [Inject] public FetchService<FirmClientDto> ClientFetchService { get; set; }

    private CascadingDataContainer<FirmClientDto> _dataContainer = new()
        {
            DataManager = new()
            {
                SelectedProperties = ["Name", "VatNumber"],
                MainItems = [],
                SelectedItems = [],
                NewItem = new(),
                SelectedItem = new()
            }
        };

    protected override async Task OnInitializedAsync()
        => await LoadData(new PaginationHelper { Limit = 100, Offset = 0 });

    private void GetCascadingContainerStates(CascadingDataContainer<FirmClientDto> dataContainer)
        => _dataContainer = dataContainer;

    private async Task DeleteClient(FirmClientDto client)
        => await ClientFetchService.Delete(ControllersNames.FIRM_CLIENT, CrudApiManager.DELETE, client.Id);

    private async Task DeleteMultipleClients(IEnumerable<FirmClientDto> clients)
    {
        foreach (var client in clients)
        {
            await DeleteClient(client);
        }
    }

    private async Task LoadData(PaginationHelper paginationHelper)
        => _dataContainer.DataManager.MainItems =
            await ClientFetchService.GetAll(ControllersNames.FIRM_CLIENT, CrudApiManager.GET_WITH_PAGINATION, paginationHelper.Limit, paginationHelper.Offset);
}