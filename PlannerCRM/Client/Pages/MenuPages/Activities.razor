@page "/activities"

<h3>Activities</h3>
<PageTitle>Activities</PageTitle>

@if (fetch.IsBusy)
{
    <Loader />
}
else
{
    <RadzenButton ButtonStyle="ButtonStyle.Primary" Variant="Variant.Outlined" Text="Add" Click="@OnAdd"></RadzenButton>

    <RadzenDataGrid Data="@_activities"
                    TItem="@ActivityDto"
                    AllowSorting="true"
                    AllowPaging="true"
                    AllowFiltering="true"
                    SelectionMode="DataGridSelectionMode.Single"
                    RowSelect="OnSelect">
        <Columns>
            <RadzenDataGridColumn TItem="@ActivityDto" Property="@nameof(ActivityDto.name)" Title="Name" />
            <RadzenDataGridColumn TItem="@ActivityDto" Property="@nameof(ActivityDto.startDateString)" Title="Start Date" />
            <RadzenDataGridColumn TItem="@ActivityDto" Property="@nameof(ActivityDto.endDateString)" Title="End Date" />
        </Columns>
    </RadzenDataGrid>
}

@code {
    private ActivityDto _selectedActivity = null;
    private List<ActivityDto> _activities = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            fetch.IsBusy = true;

            var result = await fetch.ExecuteAsync(ApiUrl.ACTIVITY_CONTROLLER, ApiUrl.ACTIVITY_LIST, new WorkOrderFilterDto(), ApiType.Post);
            if (result.data is not null)
            {
                _activities = JsonSerializer.Deserialize<List<ActivityDto>>(result.data.ToString());
            }
            fetch.IsBusy = false;
        }
        catch 
        {
            notification.Notify(NotificationSeverity.Warning, "Something went wrong, please retry", null, 4000);
        }
    }

    private async Task OnSelect(ActivityDto activity)
    {
        _selectedActivity = activity;

        await dialog.OpenAsync<ActivityDialog>("Activity Info",
            new Dictionary<string, object>() { { nameof(ActivityDialog.SelectedActivity), _selectedActivity } },
            new DialogOptions() { Width = "40vw;" }
        );
    }

    private async Task OnAdd()
    {
        await dialog.OpenAsync<ActivityAddForm>("Add Activity", null, new DialogOptions() { Width = "40vw;" });
    }
}
