@page "/activities"
@inject DialogService ds
@inject FetchService<ActivityDto> fs

<h3>Activities</h3>
<PageTitle>Activities</PageTitle>

<RadzenButton ButtonStyle="ButtonStyle.Primary" Variant="Variant.Outlined" Text="Add" Click="@OnAdd"></RadzenButton>

<RadzenDataGrid Data="@_activities"
                TItem="@ActivityDto"
                AllowSorting="true"
                AllowPaging="true"
                AllowFiltering="true"
                SelectionMode="DataGridSelectionMode.Single"
                RowSelect="OnSelect">
    <Columns>
        <RadzenDataGridColumn TItem="@ActivityDto" Property="Name" Title="Name" />
        <RadzenDataGridColumn TItem="@ActivityDto" Property="StartDate" Title="Start Date" />
        <RadzenDataGridColumn TItem="@ActivityDto" Property="EndDate" Title="End Date" />
    </Columns>
</RadzenDataGrid>

@code {
    private ActivityDto _selectedActivity = null;
    private List<ActivityDto> _activities = new();
    private PaginationHelper _pg = new() { Limit = 100, Offset = 0 };

    protected override async Task OnInitializedAsync()
    {
        _activities = await fs.GetAll(
            EndpointsNames.ACTIVITY,
            EndpointCrudActions.GET_WITH_PAGINATION,
            _pg.Limit,
            _pg.Offset
        );
    }

    private async Task OnSelect(ActivityDto activity)
    {
        _selectedActivity = activity;

        await ds.OpenAsync<ActivityDialog>("Activity Info",
            new Dictionary<string, object>() { { nameof(ActivityDialog.SelectedActivity), _selectedActivity } },
            new DialogOptions() { Width = "40vw;" }            
        );
    }

    private async Task OnAdd()
    {
        await ds.OpenAsync<ActivityAddForm>("Add Activity", null, new DialogOptions() { Width = "40vw;" });
    }
}
