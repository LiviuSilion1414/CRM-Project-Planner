@page "/workOrders"

<h3>Workorders</h3>
<PageTitle>Workorders</PageTitle>

<RadzenButton ButtonStyle="ButtonStyle.Primary" Variant="Variant.Outlined" Text="Add" Click="@OnAdd"></RadzenButton>

<RadzenDataGrid Data="@_workOrders"
                TItem="@WorkOrderDto"
                AllowSorting="true"
                AllowPaging="true"
                AllowFiltering="true"
                SelectionMode="DataGridSelectionMode.Single"
                RowSelect="OnSelect">
    <Columns>
        <RadzenDataGridColumn TItem="@WorkOrderDto" Property="Name" Title="Name" />
        <RadzenDataGridColumn TItem="@WorkOrderDto" Property="@nameof(WorkOrderDto.StartDateString)" Title="Start Date" />
        <RadzenDataGridColumn TItem="@WorkOrderDto" Property="@nameof(WorkOrderDto.EndDateString)" Title="End Date" />
    </Columns>
</RadzenDataGrid>

@code {
    private WorkOrderDto _selectedWorkOrder = null;
    private List<WorkOrderDto> _workOrders = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        var result = await fetch.ExecuteAsync(WorkOrderEndpointActions.GetWithPagination(100, 0), new SearchFilter(), ApiType.Post);
        _workOrders = JsonSerializer.Deserialize<List<WorkOrderDto>>(result.Data.ToString());

        await LoadRelatedActivities();
    }

    private async Task LoadRelatedActivities()
    {
        foreach (var wo in _workOrders)
        {
            var result = await fetch.ExecuteAsync(ActivityEndpointActions.GetWithPagination(100, 0), new SearchFilter(), ApiType.Post);
            wo.Activities = JsonSerializer.Deserialize<List<ActivityDto>>(result.Data.ToString());
        }
    }

    private async Task OnSelect(WorkOrderDto workOrder)
    {
        _selectedWorkOrder = workOrder;

        await dialog.OpenAsync<WorkOrderDialog>("WorkOrder Info",
            new Dictionary<string, object>() { { nameof(WorkOrderDialog.SelectedWorkOrder), _selectedWorkOrder } },
            new DialogOptions() { Width = "50vw;" }
        );
    }

    private async Task OnAdd()
    {
        await dialog.OpenAsync<WorkOrderAddForm>("Add WorkOrder", null, new DialogOptions() { Width = "40vw;" });
    }
}