@inherits LayoutComponentBase

@inject NavigationManager nav
@inject LocalStorageService localStorage

<RadzenComponents @rendermode="RenderMode.InteractiveWebAssembly" />
<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />
<RadzenContextMenu />

<AuthorizeView>
    <Authorized>
        <RadzenLayout>
            <RadzenHeader>
                <RadzenStack Orientation="Orientation.Horizontal"
                AlignItems="AlignItems.Center"
                JustifyContent="JustifyContent.SpaceBetween"
                Style="width: 100%; background-color: lightseagreen;">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                        <RadzenSidebarToggle Click="ToggleSidebar" />
                        <RadzenLink class="text-decoration-none" Match="NavLinkMatch.All" Path="/home" Text="PlannerCRM" />
                    </RadzenStack>
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10px">
                        <RadzenLink Path="notifications">
                            <RadzenIcon Style="font-size: xx-large;" Icon="notifications"></RadzenIcon>
                        </RadzenLink>
                        <RadzenProfileMenu Click="HandleClick" ShowIcon="true">
                            <Template>
                                <RadzenText TextStyle="TextStyle.H6">HI, <b>@context.User.Identity.Name.ToUpper()!</b></RadzenText>
                            </Template>
                            <ChildContent>
                                <RadzenProfileMenuItem Text="Profile" Icon="person" Path="/profile"></RadzenProfileMenuItem>
                                <RadzenProfileMenuItem Text="Logout" Icon="logout" IconColor="@Colors.Danger"></RadzenProfileMenuItem>
                            </ChildContent>
                        </RadzenProfileMenu>
                    </RadzenStack>
                </RadzenStack>
            </RadzenHeader>
            <RadzenSidebar @bind-Expanded="sidebarExpanded" Style="height: 100vh;">
                <RadzenPanelMenu>
                    <RadzenPanelMenuItem Text="Home" Icon="house" Path="/home" />
                    <RadzenPanelMenuItem Text="Recently" Icon="schedule" Path="/recently" />
                    <RadzenPanelMenuItem Text="WorkOrders" Icon="work" Path="/workOrders" />
                    <RadzenPanelMenuItem Text="Employees" Icon="people" Path="/employees" />
                    <RadzenPanelMenuItem Text="Roles" Icon="work" Path="/roles" />
                    <RadzenPanelMenuItem Text="Activities" Icon="check_circle" Path="/activities" />
                    <RadzenPanelMenuItem Text="Clients" Icon="groups" Path="/clients" />
                    <RadzenPanelMenuItem Text="Statistics" Icon="bar_chart" Path="/statistics" />
                    <RadzenPanelMenuItem Text="Calendar" Icon="calendar_today" Path="/calendar" />
                    <RadzenPanelMenuItem Text="Invoices" Icon="description" Path="/invoices" />
                    <RadzenPanelMenuItem Text="Settings" Icon="settings" Path="/settings" />
                </RadzenPanelMenu>
                <RadzenStack AlignItems="Radzen.AlignItems.Center" Gap="0" class="rz-py-4 rz-py-lg-6" Style="padding: var(--rz-panel-menu-item-padding);">
                    <RadzenText Text="PlannerCRM v1.0.0" TextStyle="Radzen.Blazor.TextStyle.Caption" Style="color: lightseagreen" TagName="Radzen.Blazor.TagName.P" TextAlign="Radzen.TextAlign.Center" />
                    <RadzenText Text="Copyright Ⓒ 2025" TextStyle="Radzen.Blazor.TextStyle.Caption" Style="color: lightseagreen" class="rz-mb-0" TagName="Radzen.Blazor.TagName.P" TextAlign="Radzen.TextAlign.Center" />
                </RadzenStack>
            </RadzenSidebar>
            <RadzenBody>
                @Body
            </RadzenBody>
        </RadzenLayout>
    </Authorized>
    <NotAuthorized>
        <NotAuthorized />
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool sidebarExpanded = true;

    protected override async Task OnInitializedAsync()
    {
        await auth.GetAuthenticationStateAsync();
    }

    private void ToggleSidebar()
    {
        sidebarExpanded = !sidebarExpanded;
    }

    async Task HandleClick(RadzenProfileMenuItem menuitem)
    {
        if (menuitem.Text.Equals("Logout"))
        {
            await Logout();
        }
    }

    async Task Logout()
    {
        await localStorage.ClearAsync();
        nav.NavigateTo("/login", true);
    }
}
